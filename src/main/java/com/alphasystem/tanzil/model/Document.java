//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2016.11.21 at 09:14:51 AM EST
//


package com.alphasystem.tanzil.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;


/**
 * <p>Java class for quran complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="quran"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="sura" type="{http://www.tanzil.net}sura" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "quran", propOrder = {
        "chapters"
})
public class Document {

    @XmlElement(name = "sura", required = true)
    protected List<Chapter> chapters;

    /**
     * Gets the value of the chapters property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the chapters property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChapters().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Chapter }
     *
     *
     */
    public List<Chapter> getChapters() {
        if (chapters == null) {
            chapters = new ArrayList<Chapter>();
        }
        return this.chapters;
    }

    public Document withChapters(Chapter... values) {
        if (values!= null) {
            for (Chapter value: values) {
                getChapters().add(value);
            }
        }
        return this;
    }

    public Document withChapters(Collection<Chapter> values) {
        if (values!= null) {
            getChapters().addAll(values);
        }
        return this;
    }

}
